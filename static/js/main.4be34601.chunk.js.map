{"version":3,"sources":["components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","contact","payload","contacts","removeContact","filterContact","items","createReducer","contactsActions","state","action","filter","id","combineReducers","store","configureStore","reducer","contactsReducer","Notification","alert","delay","CSSTransition","in","classNames","styles","timeout","onEntered","unmountOnExit","className","notification","ContactForm","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","find","item","reset","uuidv4","this","setTimeout","form","onSubmit","formInput","type","placeholder","onChange","formButton","disabled","length","Component","mapDispatchToProps","connect","onRemove","toLowerCase","includes","TransitionGroup","component","map","key","contactsItem","contactsText","contactsButton","onClick","Section","title","children","appear","section","App","contactsTitle","sectionText","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,aAAe,8BAA8B,cAAgB,iC,mBCA9LD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,aAAe,kCAAkC,aAAe,kCAAkC,eAAiB,oCAAoC,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,kC,mBCAlVD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,WAAa,kC,mBCA3GD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCAvMD,EAAOC,QAAU,CAAC,OAAS,yB,0KCWZ,GACbC,WAViBC,YAAa,gBAAgB,SAACC,GAAD,MAAc,CAC5DC,QAAS,CACPC,SAAUF,OASZG,cANoBJ,YAAa,mBAOjCK,cANoBL,YAAa,oBCM7BM,EAAQC,YAAc,IAAD,mBACxBC,EAAgBT,YAZA,SAACU,EAAOC,GACzB,MAAM,GAAN,mBAAWD,GAAX,CAAkBC,EAAOR,QAAQC,cAUR,cAExBK,EAAgBJ,eATG,SAACK,EAAOC,GAC5B,OAAOD,EAAME,QAAO,SAACV,GAAD,OAAaA,EAAQW,KAAOF,EAAOR,cAM9B,IAKrBS,EAASJ,YAAc,GAAD,eACzBC,EAAgBH,eATG,SAACI,EAAOC,GAC5B,OAAOA,EAAOR,YAWDW,cAAgB,CAC7BP,QACAK,WCDaG,EAPDC,YAAe,CAC3BC,QAAS,CACPb,SAAUc,K,iECDCC,EAfM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7B,OACE,kBAACC,EAAA,EAAD,CACAC,GAAIH,EACJI,WAAYC,IACZC,QAAS,IACTC,UAAWN,EACXO,eAAa,GAEX,yBAAKC,UAAWJ,IAAOK,cACrB,yD,iBCNFC,E,4MACJrB,MAAQ,CACNsB,KAAM,GACNC,OAAQ,GACRb,OAAO,G,EAGTc,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBJ,EADY,EACZA,KAAMK,EADM,EACNA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBADkB,MAEY,EAAK9B,MAA7BsB,EAFY,EAEZA,KAAMC,EAFM,EAENA,OAAQb,EAFF,EAEEA,MAGtB,GAFkB,EAAKqB,MAAMrC,SAArBG,MACamC,MAAK,SAACC,GAAD,OAAUA,EAAKX,OAASA,KAGhD,OADA,EAAKY,QACE,EAAKN,SAAS,CAAElB,OAAQA,IAEjC,IAAMuB,EAAQ,CACZ9B,GAAIgC,cACJb,KAAMA,EACNC,OAAQA,GAEV,EAAKQ,MAAMzC,WAAW2C,GACtB,EAAKC,S,EAEPA,MAAQ,WACN,EAAKN,SAAS,CACZN,KAAM,GACNC,OAAQ,GACRb,OAAO,K,uDAID,IAAD,SACyB0B,KAAKpC,MAA7BsB,EADD,EACCA,KAAMC,EADP,EACOA,OAAQb,EADf,EACeA,MAEtB,OACE,oCACE,kBAAC,EAAD,CAAcA,MAAOA,EAAOC,MAHlB,kBAAM0B,WAAW,EAAKT,SAAS,CAAElB,OAAQA,IAAU,QAI7D,0BAAMS,UAAWJ,IAAOuB,MACtB,0BAAMC,SAAUH,KAAKP,cACnB,uCAEE,2BACEV,UAAWJ,IAAOyB,UAClBC,KAAK,OACLd,MAAOL,EACPA,KAAK,OACLoB,YAAY,oBACZC,SAAUP,KAAKZ,gBAGnB,6BACA,yCAEE,2BACEL,UAAWJ,IAAOyB,UAClBC,KAAK,MACLd,MAAOJ,EACPD,KAAK,SACLoB,YAAY,sBACZC,SAAUP,KAAKZ,gBAGnB,4BACEL,UAAWJ,IAAO6B,WAClBH,KAAK,SACLI,UAAWvB,EAAKwB,SAAWvB,EAAOuB,QAHpC,sB,GAtEcC,aAyFpBC,EAAqB,CACzB1D,WAAYS,EAAgBT,YAGf2D,eAPS,SAACjD,GACvB,OAAOA,IAM+BgD,EAAzBC,CAA6C5B,G,yBCxCtD2B,EAAqB,CACzBE,SAAUnD,EAAgBJ,eAEbsD,eAZS,SAACjD,GAIvB,MAAO,CACLH,MAJsBG,EAAMN,SAASG,MAAMK,QAAO,SAAC+B,GAAD,OACpDA,EAAKX,KAAK6B,cAAcC,SAASpD,EAAMN,SAASQ,OAAOiD,qBAUjBH,EAAzBC,EAzDK,SAAC,GAAyB,IAAvBpD,EAAsB,EAAtBA,MAAOqD,EAAe,EAAfA,SAC5B,OACE,yBAAK/B,UAAWJ,IAAOrB,UACrB,kBAAC2D,EAAA,EAAD,CAAiBC,UAAU,MACxBzD,EAAM0D,KAAI,SAAEtB,GAAF,OACT,kBAACrB,EAAA,EAAD,CACE4C,IAAKvB,EAAK9B,GACVW,WAAYC,IACZC,QAAS,IACTE,eAAa,GAEb,wBAAIC,UAAWJ,IAAO0C,cACpB,uBAAGtC,UAAWJ,IAAO2C,cAClBzB,EAAKX,KADR,MACiBW,EAAKV,QAGtB,4BACEJ,UAAWJ,IAAO4C,eAClBlB,KAAK,SACLmB,QAAS,kBAAMV,EAASjB,EAAK9B,MAH/B,kB,iBCAR6C,EAAqB,CACzBL,SAAU5C,EAAgBH,eAEbqD,cAAQ,KAAMD,EAAdC,EApBA,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAChB,OACE,yBAAKxB,UAAWJ,IAAOb,QAAvB,yBAEE,2BACEuC,KAAK,OACLnB,KAAK,SACLqB,SAAU,SAAClB,GAAD,OAAOkB,EAASlB,EAAEC,OAAOC,QACnCxB,GAAK,oB,iBCYE0D,EArBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,kBAACnD,EAAA,EAAD,CACEC,IAAI,EACJmD,QAAQ,EACRhD,QAAS,IACTF,WAAYC,IACZG,eAAa,GAEb,wBAAIC,UAAWJ,IAAOkD,SAAUH,IAElCC,ICTCG,G,6KAEK,IACDrE,EAASuC,KAAKL,MAAMrC,SAApBG,MACP,OACE,oCACE,kBAAC,EAAD,CAASiE,MAAM,cACf,kBAAC,EAAD,MACCjE,EAAMiD,OAAS,GAAK,kBAAC,EAAD,MACpB,wBAAI3B,UAAWJ,IAAOoD,eAAtB,YACCtE,EAAMiD,OACJ,kBAAC,EAAD,MACE,uBAAG3B,UAAWJ,IAAOqD,aAArB,mC,GAZKrB,cAuBJE,eAJS,SAACjD,GACvB,OAAOA,IAGMiD,CAAyBiB,GCzBxCG,IAASC,OACP,kBAAC,IAAD,CAAUjE,MAAQA,GAChB,kBAAC,EAAD,OAEFkE,SAASC,eAAe,W","file":"static/js/main.4be34601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ZMei\",\"sectionText\":\"Section_sectionText__2ANNi\",\"appear\":\"Section_appear__jFbpA\",\"appearActive\":\"Section_appearActive__3II2u\",\"contactsTitle\":\"Section_contactsTitle__2JlPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts___w6cp\",\"contactsItem\":\"ContactList_contactsItem__2sROM\",\"contactsText\":\"ContactList_contactsText__QWqDe\",\"contactsButton\":\"ContactList_contactsButton__1grSE\",\"enter\":\"ContactList_enter__1vCMw\",\"enterActive\":\"ContactList_enterActive__2-JMQ\",\"exit\":\"ContactList_exit__sWiiX\",\"exitActive\":\"ContactList_exitActive__3frk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2aJwv\",\"formInput\":\"ContactForm_formInput__1AFWD\",\"formButton\":\"ContactForm_formButton__2D4qn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1ssuf\",\"enter\":\"Notification_enter__3ta0N\",\"enterActive\":\"Notification_enterActive__1Rvtq\",\"exit\":\"Notification_exit__1fC1b\",\"exitActive\":\"Notification_exitActive__2-xxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3hvdd\"};","// import actionsTypes from './contactsActionsTypes';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (contact) => ({\r\n  payload: {\r\n    contacts: contact,\r\n  },\r\n}));\r\nconst removeContact = createAction('contacts/remove');\r\nconst filterContact = createAction('contacts/filter');\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  filterContact,\r\n};\r\n\r\n\r\n// BEFORE(without toolkit)\r\n// const addContact = (contact) => ({\r\n//   type: actionsTypes.ADD_CONTACT,\r\n//   payload: {\r\n//     contacts: contact,\r\n//   },\r\n// });\r\n\r\n// const removeContact = (id) => ({\r\n//   type: actionsTypes.REMOVE_CONTACT,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\n// const filterContact = (filter) => ({\r\n//   type: actionsTypes.FILTER_CONTACTS,\r\n//   payload: {\r\n//     filter,\r\n//   },\r\n// });\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contacts];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst filterContact = (state, action) => {\r\n  return action.payload;\r\n};\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.removeContact]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.filterContact]: filterContact,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.addContact.type:\r\n//       return [...state, payload.contacts];\r\n//     case contactsActions.removeContact.type:\r\n//       return state.filter((contact) => contact.id !== payload.id);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.filterContact.type:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","// import { createStore, combineReducers } from \"redux\";\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\n\r\n\r\n// BEFORE\r\n// const rootReducers = combineReducers({\r\n//     contacts: contactsReducer,\r\n// });\r\n// const store = createStore(\r\n//     rootReducers,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\n\r\n// AFTER(toolkit)\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ alert, delay }) => {\r\n  return (\r\n    <CSSTransition\r\n    in={alert}\r\n    classNames={styles}\r\n    timeout={1000}\r\n    onEntered={delay}\r\n    unmountOnExit\r\n    >\r\n      <div className={styles.notification}>\r\n        <p>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Notification from \"../Notification/Notification.js\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    alert: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number, alert } = this.state;\r\n    const { items } = this.props.contacts;\r\n    const repeat = items.find((item) => item.name === name);\r\n    if (repeat) {\r\n      this.reset();\r\n      return this.setState({ alert: !alert });\r\n    }\r\n    const item  = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(item);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n      alert: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, alert } = this.state;\r\n    const delay = () => setTimeout(this.setState({ alert: !alert }), 1000);\r\n    return (\r\n      <>\r\n        <Notification alert={alert} delay={delay} />\r\n        <form className={styles.form}>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Name:\r\n              <input\r\n                className={styles.formInput}\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                placeholder=\"enter the name...\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Number:\r\n              <input\r\n                className={styles.formInput}\r\n                type=\"tel\"\r\n                value={number}\r\n                name=\"number\"\r\n                placeholder=\"enter the number...\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <button\r\n              className={styles.formButton}\r\n              type=\"submit\"\r\n              disabled={!name.length || !number.length}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\nconst mapDispatchToProps = {\r\n  addContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst ContactList = ({ items, onRemove }) => {\r\n  return (\r\n    <div className={styles.contacts}>\r\n      <TransitionGroup component=\"ul\">\r\n        {items.map(( item ) => (\r\n          <CSSTransition\r\n            key={item.id}\r\n            classNames={styles}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <li className={styles.contactsItem}>\r\n              <p className={styles.contactsText}>\r\n                {item.name} : {item.number}\r\n              </p>\r\n\r\n              <button\r\n                className={styles.contactsButton}\r\n                type=\"button\"\r\n                onClick={() => onRemove(item.id)}\r\n              >\r\n                ×\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const visibleContacts = state.contacts.items.filter((item) =>\r\n  item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n  return {\r\n    items: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemove: contactsActions.removeContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <div className={styles.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n        id = \"filterInput\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: contactsActions.filterContact,\r\n};\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={styles}\r\n        unmountOnExit\r\n      >\r\n        <h2 className={styles.section}>{title}</h2>\r\n      </CSSTransition>\r\n     {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Section from \"../Section/Section\";\r\nimport styles from \"../Section/Section.module.css\";\r\nimport \"./GlobalStyles.css\";\r\nimport { connect } from \"react-redux\";\r\n class App extends Component { \r\n\r\n  render() {\r\n    const {items} = this.props.contacts;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\" />\r\n        <ContactForm />\r\n        {items.length > 1 && <Filter />}\r\n         <h2 className={styles.contactsTitle}>Contacts</h2>\r\n         {items.length ?   \r\n            <ContactList />           \r\n           : (<p className={styles.sectionText}>There are no contacts here</p>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport App from \"./components/App/App.js\";\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}